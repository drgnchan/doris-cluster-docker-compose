version: '3.8'

services:
  haproxy:
    image: haproxy:2.9
    container_name: haproxy
    ports:
      - "8030:8030"  # FE Web UI
      - "9030:9030"  # FE MySQL 接口
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - fe1
      - fe2
      - fe3
    networks:
      doris_net:
        ipv4_address: 172.20.0.10

  fe1:
    image: apache/doris:fe-2.1.10
    container_name: fe1
    hostname: fe1
    environment:
      - FE_ID=1
      - FE_SERVERS=fe1:172.20.0.11:9010,fe2:172.20.0.12:9010,fe3:172.20.0.13:9010
      - TZ=Asia/Shanghai
    volumes:
      - ./fe1/doris-meta:/opt/apache-doris/fe/doris-meta
      - ./fe1/log:/opt/apache-doris/fe/log
    networks:
      doris_net:
        ipv4_address: 172.20.0.11

  fe2:
    image: apache/doris:fe-2.1.10
    container_name: fe2
    hostname: fe2
    environment:
      - FE_ID=2
      - FE_SERVERS=fe1:172.20.0.11:9010,fe2:172.20.0.12:9010,fe3:172.20.0.13:9010
      - TZ=Asia/Shanghai
    volumes:
      - ./fe2/doris-meta:/opt/apache-doris/fe/doris-meta
      - ./fe2/log:/opt/apache-doris/fe/log
    networks:
      doris_net:
        ipv4_address: 172.20.0.12

  fe3:
    image: apache/doris:fe-2.1.10
    container_name: fe3
    hostname: fe3
    environment:
      - FE_ID=3
      - FE_SERVERS=fe1:172.20.0.11:9010,fe2:172.20.0.12:9010,fe3:172.20.0.13:9010
      - TZ=Asia/Shanghai
    volumes:
      - ./fe3/doris-meta:/opt/apache-doris/fe/doris-meta
      - ./fe3/log:/opt/apache-doris/fe/log
    networks:
      doris_net:
        ipv4_address: 172.20.0.13

  be1:
    image: apache/doris:be-2.1.10
    container_name: be1
    hostname: be1
    environment:
      - FE_SERVERS=fe1:172.20.0.11:9030,fe2:172.20.0.12:9030,fe3:172.20.0.13:9030
      - BE_ADDR=172.20.0.21:9050
      - TZ=Asia/Shanghai
    volumes:
      - ./be1/storage:/opt/apache-doris/be/storage
      - ./be1/log:/opt/apache-doris/be/log
    depends_on:
      - fe1
      - fe2
      - fe3
    networks:
      doris_net:
        ipv4_address: 172.20.0.21

  be2:
    image: apache/doris:be-2.1.10
    container_name: be2
    hostname: be2
    environment:
      - FE_SERVERS=fe1:172.20.0.11:9030,fe2:172.20.0.12:9030,fe3:172.20.0.13:9030
      - BE_ADDR=172.20.0.22:9050
      - TZ=Asia/Shanghai
    volumes:
      - ./be2/storage:/opt/apache-doris/be/storage
      - ./be2/log:/opt/apache-doris/be/log
    depends_on:
      - fe1
      - fe2
      - fe3
    networks:
      doris_net:
        ipv4_address: 172.20.0.22

  be3:
    image: apache/doris:be-2.1.10
    container_name: be3
    hostname: be3
    environment:
      - FE_SERVERS=fe1:172.20.0.11:9030,fe2:172.20.0.12:9030,fe3:172.20.0.13:9030
      - BE_ADDR=172.20.0.23:9050
      - TZ=Asia/Shanghai
    volumes:
      - ./be3/storage:/opt/apache-doris/be/storage
      - ./be3/log:/opt/apache-doris/be/log
    depends_on:
      - fe1
      - fe2
      - fe3
    networks:
      doris_net:
        ipv4_address: 172.20.0.23

  flink-jobmanager:
    image: flink:1.19
    container_name: flink-jobmanager
    ports:
      - "8081:8081"  # Flink Web UI
      - "6123:6123"  # JobManager RPC
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        state.backend: filesystem
        state.checkpoints.dir: file:///flink-data/checkpoints
    volumes:
      - ./flink-data:/flink-data
    command: jobmanager
    networks:
      doris_net:
        ipv4_address: 172.20.0.30

  flink-taskmanager:
    image: flink:1.19
    container_name: flink-taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
        state.backend: filesystem
        state.checkpoints.dir: file:///flink-data/checkpoints
    volumes:
      - ./flink-data:/flink-data
    depends_on:
      - flink-jobmanager
    command: taskmanager
    networks:
      doris_net:
        ipv4_address: 172.20.0.31
        
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      doris_net:
        ipv4_address: 172.20.0.40

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      doris_net:
        ipv4_address: 172.20.0.41
        
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./minio-data:/data
    command: server --console-address ":9001" /data
    networks:
      doris_net:
        ipv4_address: 172.20.0.50


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      doris_net:
        ipv4_address: 172.20.0.60


networks:
  doris_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
